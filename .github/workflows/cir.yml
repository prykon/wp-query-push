name: CI and Release

on:
  push:
    tags:
      - 'v*'

env:
  PLUGIN_SLUG: wp-query-push
  ZIP_FILE: wp-query-push.zip

jobs:
  build_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

    - name: Install Composer dependencies
      uses: php-actions/composer@v6
      with:
        php_version: "7.4"
        dev: "no"
        quiet: "yes"

    #- name: Run PHP STatic ANalysis
    #  run: vendor/bin/phpstan analyse -c phpstan.neon

    #- name: PHPStan Static Analysis
    #  uses: php-actions/phpstan@v3
    #  with:
    #    php_version: "7.4"
    #    configuration: ./phpstan.neon
        #memory_limit: "256M"

    #- name: Run PHPUnit tests
    #  run: vendor/bin/phpunit tests

    #- name: PHPUnit tests
    #  uses: php-actions/phpunit@v3
    #  with:
    #    php_version: "7.4"
        #configuration: "custom/path/to/phpunit.xml"
        #memory_limit: "256M"

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        #node-version: 'lts/*'
        cache: 'npm'

    - name: Install NPM packages 
      run: npm install

    - name: Build React App
      run: CI=false npm run build --if-present

    #- name: Test React App
    #  run: npm run test --if-present

    - name: Create release ZIP file
      run: |
        mkdir ${{ env.PLUGIN_SLUG }}
        cp -r LICENSE ${{ env.PLUGIN_SLUG }}.php index.php build includes rest-api templates vendor ${{ env.PLUGIN_SLUG }}/
        zip -r ${{ env.ZIP_FILE }} ${{ env.PLUGIN_SLUG }}

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.ZIP_FILE }}
        asset_name: ${{ env.ZIP_FILE }}
        asset_content_type: application/zip
